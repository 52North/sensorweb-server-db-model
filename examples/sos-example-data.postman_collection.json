{
	"variables": [],
	"info": {
		"name": "sos-example-data",
		"_postman_id": "708d0de5-d0dc-e12c-6b58-dbb4dc1ecfd5",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "initialize",
			"description": "",
			"item": [
				{
					"name": "init-test-helperes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// https://github.com/postmanlabs/postman-app-support/issues/882#issuecomment-278759032",
									"postman.setGlobalVariable(\"loadHelpers\", function loadHelpers() {",
									"    let helpers = {};",
									"",
									"    var navigateTo = function(path, json) {",
									"        path = path || [];",
									"        return path.reduce((o, n) => (o && o[n]) ? o[n] : undefined, json);",
									"    };",
									"",
									"    var logFailWarning = function logFailWarning(name, expected, actual) {",
									"        console.warn(\"Expected \" + name + \": \" + expected + \". But was: \" + actual);",
									"    };",
									"    ",
									"    helpers.test200 = function test200(contentType) {",
									"        tests[\"Response returned 200\"] = responseCode.code === 200;",
									"        if (contentType) {",
									"            helpers.testContentTypeStartsWith(contentType);",
									"        }",
									"    };",
									"    ",
									"    helpers.test400 = function test400() {",
									"        tests[\"Response returned 400\"] = responseCode.code === 400;",
									"        helpers.testContentTypeStartsWith(\"application/json\");",
									"        var jsonData = JSON.parse(responseBody);",
									"        tests[\"statusCode is 400\"] = jsonData.statusCode = 400;",
									"        tests[\"reason is 'Not Found'\"] = jsonData.reason === \"Bad Request\";",
									"        tests[\"user message available\"] = jsonData.userMessage !== undefined;",
									"        tests[\"hints available\"] = jsonData.hints !== undefined && jsonData.hints.length > 0;",
									"    };",
									"    ",
									"    helpers.test404 = function test404() {",
									"        tests[\"Response returned 404\"] = responseCode.code === 404;",
									"        helpers.testContentTypeStartsWith(\"application/json\");",
									"        var jsonData = JSON.parse(responseBody);",
									"        tests[\"statusCode is 404\"] = jsonData.statusCode = 404;",
									"        tests[\"reason is 'Not Found'\"] = jsonData.reason === \"Not Found\";",
									"        tests[\"user message available\"] = jsonData.userMessage !== undefined;",
									"    };",
									"    ",
									"    helpers.test406 = function test406() {",
									"        tests[\"Response returned 406\"] = responseCode.code === 406;",
									"    };",
									"    ",
									"    helpers.testContentTypeStartsWith = function testContentTypeStartsWith(contentType) {",
									"        var actualContentType = postman.getResponseHeader(\"Content-Type\");",
									"        tests[\"Content-Type is \" + contentType] = actualContentType.startsWith(contentType)",
									"                                                    || logFailWarning(\"Content-Type\", contentType, actualContentType);",
									"    };",
									"",
									"    helpers.containsId = function(data, id) {",
									"        for (var i = 0; i < data.length ; i++) {",
									"            if (data[i] && data[i].id === id) {",
									"                return true;",
									"            }",
									"        }",
									"        return false;",
									"    };",
									"    ",
									"    var assertNonEmpty = function(collection=[],failOnEmpty=true) {",
									"        if (collection.length === 0 && failOnEmpty) {",
									"            tests[\"Couldn't perform members check on empty collection!\"] = false;",
									"        }",
									"    };",
									"    ",
									"    helpers.testAllMembersPresent = function(collection=[], members=[], failOnEmpty=true) {",
									"        collection = Array.isArray(collection) ? collection : [collection];",
									"        assertNonEmpty(collection, failOnEmpty);",
									"        for (let i = 0; i < collection.length; i++) {",
									"            const currentItem = collection[i];",
									"            for (var j = 0; j < members.length ; j++) {",
									"                const currentMember = members[j];",
									"                const id = currentItem.id || \"Unresolvalble ID!\";",
									"                tests[\"Member '\" + currentMember + \"' is present at item: \" + id] = currentItem[currentMember] !== undefined;",
									"            }",
									"        }",
									"    };",
									"    ",
									"    var checkAllValuesPresent = function(path, values) {",
									"        for (var i = 0; i < jsonData.length; i++) {",
									"            var elementValue = navigateTo(path, jsonData[i]);",
									"            if (!values.includes(elementValue)) {",
									"                return false;",
									"            }",
									"        }",
									"        return true;",
									"    };",
									"    ",
									"    helpers.checkFilteredDatasetParameters = function(parameter, ids) {",
									"        return checkAllValuesPresent([\"parameters\", parameter, \"id\"], ids);",
									"    };",
									"    ",
									"    helpers.checkFilteredValueTypes = function(valueTypes) {",
									"        return checkAllValuesPresent([\"valueType\"], valueTypes);",
									"    };",
									"    ",
									"    helpers.testOneOf = function(allowedValues=[], path=[], json=[]) {",
									"        for (let i = 0 ; i < json.length ; i++) {",
									"            tests[\"Value \" + path + \" is one of '\" + allowedValues + \"'\"] = allowedValues.includes(navigateTo(path, json[i]));",
									"        }",
									"    };",
									"    ",
									"    helpers.allWithinBBox = function(features=[], bbox=[], failOnEmpty=true) {",
									"        features = Array.isArray(features) ? features : [features];",
									"        console.log(features);",
									"        assertNonEmpty(features, failOnEmpty);",
									"        if (bbox.length !== 4) {",
									"            console.warn(\"Expected [lon,lat,lon,lat] bbox: \" + bbox);",
									"            return false;",
									"        }",
									"        var ll_lon = bbox[0];",
									"        var ll_lat = bbox[1];",
									"        var ur_lon = bbox[2];",
									"        var ur_lat = bbox[3];",
									"        for (var i = 0; i < features.length; i++) {",
									"            var path = [\"geometry\", \"coordinates\"];",
									"            var coords = navigateTo(path, features[i]);",
									"            if (coords === undefined) {",
									"                console.warn(\"Excepted an array of GeoJSON POINT Features!\");",
									"                return false;",
									"            }",
									"            if (coords[0] < ll_lon || coords[0] > ur_lon",
									"                || coords[1] < ll_lat || coords[1] > ur_lat) {",
									"                return false;",
									"            }",
									"        }",
									"        return true;",
									"    };",
									"",
									"    // ...additional helpers",
									"",
									"    return helpers;",
									"} + '; loadHelpers();'); // when eval'd out of globals, execute it",
									"tests[\"helpers initialized\"] = true;",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "TODO",
			"description": "",
			"item": [
				{
					"name": "Dataset via DomainId",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/data?datasets=http://to.be/done/8&matchDomainIds=true&timespan=PT36H/2012-11-20T16:00:00Z&handleAs=meansurement",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET datasets quantity_7 prer. img",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET datasets via domainId",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets?datasets=http://to.be/done/8&matchDomainIds=true",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (phenomenon filter), csv",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data.zip?timespan=P10M/2012-12-01",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/zip",
								"description": "",
								"disabled": true
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "parameters",
			"description": "",
			"item": [
				{
					"name": "expanded",
					"description": "",
					"item": [
						{
							"name": "GET services expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var features = jsonData[0].features || {};",
											"var quantities = features.quantities || {};",
											"tests[\"Counts are available\"] = features.quantities !== undefined;",
											"",
											"tests[\"datasets count does not include unpublished/deleted items\"] = quantities.datasets === 10;",
											"tests[\"procedures count does not include deleted items\"] = quantities.procedures === 8;",
											"",
											"// save counts for later assertion",
											"postman.setEnvironmentVariable(\"services.quantities.datasets\", quantities.datasets);",
											"postman.setEnvironmentVariable(\"services.quantities.features\", quantities.features);",
											"postman.setEnvironmentVariable(\"services.quantities.phenomena\", quantities.phenomena);",
											"postman.setEnvironmentVariable(\"services.quantities.offerings\", quantities.offerings);",
											"postman.setEnvironmentVariable(\"services.quantities.procedures\", quantities.procedures);",
											"postman.setEnvironmentVariable(\"services.quantities.categories\", quantities.categories);",
											"postman.setEnvironmentVariable(\"services.quantities.platforms\", quantities.platforms);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/services?platformtypes=all&expanded=true&datasets=foo",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"services"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										},
										{
											"key": "datasets",
											"value": "foo",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET phenomena expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.phenomena\");",
											"tests[\"Phenomeon 5 is not listed as it is only referenced from deleted dataset\"] = !helpers.containsId(jsonData, \"5\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena?platformtypes=all&expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"phenomena"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET offerings expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.offerings\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/offerings?platformtypes=all&expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"offerings"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET categories expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.categories\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/categories?platformtypes=all&expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"categories"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET procedures expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.procedures\");",
											"tests[\"Deleted Procedure 5 is not listed\"] = !helpers.containsId(jsonData, \"5\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/procedures?platformtypes=all&expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"procedures"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET platforms expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"// can't be determined as depending on mobile/insitu flags either procedures or features are used to construct platform entities from",
											"// tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.platforms\");",
											"",
											"tests[\"Platform stationary_insitu_6 is not listed as it is only referenced from deleted dataset\"] = !helpers.containsId(jsonData, \"stationary_insitu_6\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/platforms?platformtypes=all&expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"platforms"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET features expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.features\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/features?platformtypes=all&expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"features"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "filtered",
					"description": "",
					"item": [
						{
							"name": "GET phenomena (mobile)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"correct count of filtered phenomena\"] = jsonData.length === 1;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena?platformtypes=mobile",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"phenomena"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "mobile",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET platforms with feature filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"One filter result: platform 8\"] = helpers.containsId(jsonData, \"mobile_insitu_8\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/platforms?platformtypes=all&expanded=true&features=9",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"platforms"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										},
										{
											"key": "features",
											"value": "9",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET platforms via bbox expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"// can't be determined as depending on mobile/insitu flags either procedures or features are used to construct platform entities from",
											"// tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.platforms\");",
											"",
											"tests[\"Platform stationary_insitu_6 is not listed as it is only referenced from deleted dataset\"] = !helpers.containsId(jsonData, \"stationary_insitu_6\");",
											"",
											"tests[\"Platforms within bbox\"] = helpers.allWithinBBox(jsonData, [7.0,50.5,7.9,52]);",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/platforms/?platformtypes=all&expanded=true&bbox=7.0,50.5,7.9,52",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"platforms",
										""
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										},
										{
											"key": "bbox",
											"value": "7.0,50.5,7.9,52",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "HTTP errors",
					"description": "",
					"item": [
						{
							"name": "GET platform, HTTP 404 (unknown platform type)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test404();",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/platforms/unknown_7",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "de",
										"description": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET phenomena expanded, HTTP400 (bad request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test400();",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena/?expanded=invalid",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"phenomena",
										""
									],
									"query": [
										{
											"key": "expanded",
											"value": "invalid",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET search",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/search?q=dlz&platformtypes=all",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "dlz",
									"equals": true,
									"description": ""
								},
								{
									"key": "platformtypes",
									"value": "all",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "datasets",
			"description": "",
			"item": [
				{
					"name": "HTTP errors",
					"description": "",
					"item": [
						{
							"name": "GET dataset, HTTP 406 (wrong accept header)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test406();",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7",
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": ""
									},
									{
										"key": "Accept-Language",
										"value": "de",
										"description": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET dataset, HTTP 404 (unknown value type)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test404();"
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/unknown_7",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "de",
										"description": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET dataset, HTTP 404 (not available)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test404();"
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_999",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "de",
										"description": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "filtered",
					"description": "",
					"item": [
						{
							"name": "GET datasets (mobile)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"tests[\"No datasets from stationary_insitu platforms\"] = !responseBody.has(\"stationary_insitu\");",
											"tests[\"No datasets from stationary_remote platforms\"] = !responseBody.has(\"stationary_remote\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?platformtypes=mobile",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "mobile",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET datasets via phenomena filter (5,6,9)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"// phenomenon 5 is linked with unpublished dataset",
											"tests[\"Contains filtered phenomena only\"] = helpers.checkFilteredDatasetParameters(\"phenomenon\", [\"9\",\"6\"])"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?phenomena=9,5,6&expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "phenomena",
											"value": "9,5,6"
										},
										{
											"description": "",
											"equals": true,
											"key": "expanded",
											"value": "true"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET datasets (stationary && insitu)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"tests[\"No datasets from mobile_insitu platforms\"] = !responseBody.has(\"mobile_insitu\");",
											"tests[\"No datasets from mobile_remote platforms\"] = !responseBody.has(\"mobile_remote\");",
											"tests[\"No datasets from stationary_remote platforms\"] = !responseBody.has(\"stationary_remote\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?platformtypes=stationary,insitu",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "platformtypes",
											"value": "stationary,insitu"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET datasets with valuetype (text) filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Correct count of datasets with valuetype 'text'\"] = jsonData.length === 3;",
											"tests[\"Contains filtered valueTypes only\"] = helpers.checkFilteredValueTypes([\"text\"])",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?valueTypes=text",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "valueTypes",
											"value": "text"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET datasets  (quantity || text)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Has correct count\"] = jsonData.length === 6;",
											"tests[\"Contains filtered valueTypes only\"] = helpers.checkFilteredValueTypes([\"text\", \"quantity\"]);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?valueTypes=text,quantity",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "valueTypes",
											"value": "text,quantity"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"description": "",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET datasets",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.datasets\");",
									"helpers.testAllMembersPresent(jsonData, [\"id\", \"href\", \"uom\", \"label\", \"platformType\"]);",
									"",
									"tests[\"Deleted Dataset text_5 is not listed\"] = !helpers.containsId(jsonData, \"text_5\");",
									"tests[\"Unpublished Dataset quantity_10 is not listed\"] = !helpers.containsId(jsonData, \"quantity_10\");"
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET datasets quantity_8",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"helpers.testAllMembersPresent([jsonData], [\"id\", \"label\", \"href\", \"uom\", \"platformType\", \"valueType\", \"parameters\", \"firstValue\", \"lastValue\"]);",
									"",
									"tests[\"item has correct id\"] = jsonData.id === \"quantity_8\";",
									"tests[\"item has correct valueType\"] = jsonData.valueType === \"quantity\";",
									"tests[\"item has first value\"] = jsonData.firstValue !== undefined;",
									"tests[\"first value has geometry\"] = jsonData.firstValue.geometry !== undefined;",
									"tests[\"first value is POINT(10 10)\"] = jsonData.firstValue.geometry.coordinates[0] == 10 && jsonData.firstValue.geometry.coordinates[1] == 10;",
									"tests[\"item has last value\"] = jsonData.lastValue !== undefined;",
									"tests[\"last value has geometry\"] = jsonData.lastValue.geometry !== undefined;",
									"tests[\"first value is POINT(20 20)\"] = jsonData.lastValue.geometry.coordinates[0] == 20 && jsonData.lastValue.geometry.coordinates[1] == 20;",
									"tests[\"platformType matches type of platform\"] = jsonData.parameters && jsonData.platformType === jsonData.parameters.platform.platformType;",
									"tests[\"platformType is mobile\"] = jsonData.platformType.startsWith('mobile');",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET datasets quantity_8 extras",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"dataset has resultTime extras\"] = jsonData.resultTimes !== undefined;",
									"tests[\"result times has 2012-11-18T14:00:00.000+01:00\"] = jsonData.resultTimes.includes(\"2012-11-18T14:00:00.000+01:00\");",
									"tests[\"result times has 2012-11-19T14:00:00.000+01:00\"] = jsonData.resultTimes.includes(\"2012-11-19T14:00:00.000+01:00\");"
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/extras",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET dataset (show interval)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"first value contains timestart\"] = jsonData.firstValue.timestart !== undefined;",
									"tests[\"first value contains timeend\"] = jsonData.firstValue.timeend !== undefined;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8?expanded=true&platformtypes=all&showTimeIntervals=true",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"datasets",
								"quantity_8"
							],
							"query": [
								{
									"key": "expanded",
									"value": "true",
									"equals": true,
									"description": ""
								},
								{
									"key": "platformtypes",
									"value": "all",
									"equals": true,
									"description": ""
								},
								{
									"key": "showTimeIntervals",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET dataset quantity-profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"platformType is stationary_insitu\"] = jsonData.platformType === 'stationary_insitu';",
									"tests[\"valueType is quantity-profile\"] = jsonData.valueType === 'quantity-profile';",
									"",
									"var isProfileValue = function(data) {",
									"    for (var i = 0; i < data.length ; i++) {",
									"        if (data[i]",
									"            && (data[i].vertical !== undefined",
									"                || data[i].value !== undefined)) {",
									"            return true;",
									"        }",
									"    }",
									"    return false;",
									"};",
									"tests[\"firstValue is profile value\"] = isProfileValue(jsonData.firstValue.value);",
									"tests[\"lastValue is profile value\"] = isProfileValue(jsonData.lastValue.value);",
									"",
									"tests[\"firstValue has 2 child values\"] = jsonData.firstValue.value.length === 2;",
									"tests[\"lastValue has 2 child values\"] = jsonData.lastValue.value.length === 2;",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity-profile_1/",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "data",
			"description": "",
			"item": [
				{
					"name": "filtered",
					"description": "",
					"item": [
						{
							"name": "GET mobile data via bbox filter (quantity_8)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var navigateTo = function(path, json) {",
											"    path = path || [];",
											"    return path.reduce((o, n) => o[n], json);",
											"};",
											"",
											"var coordinatesWithinBBox = function(values, bbox) {",
											"    for (var i = 0; i < values.length; i++) {",
											"    var path = [\"geometry\", \"coordinates\"];",
											"        var ll_lon = bbox[0];",
											"        var ll_lat = bbox[1];",
											"        var ur_lon = bbox[2];",
											"        var ur_lat = bbox[3];",
											"        var coords = navigateTo(path, values[i]);",
											"        if (coords[0] < ll_lon || coords[0] > ur_lon",
											"            || coords[1] < ll_lat || coords[1] > ur_lat) {",
											"            console.log(coords);",
											"            return false;",
											"        }",
											"    }",
											"    return true;",
											"};",
											"",
											"tests[\"Data within bbox\"] = coordinatesWithinBBox(jsonData.values, [7.0,50.5,7.9,52]);",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/data?timespan=P200D/2012-11-20TZ&bbox=7.0,50.5,7.9,52",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_8",
										"data"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P200D/2012-11-20TZ",
											"equals": true,
											"description": ""
										},
										{
											"key": "bbox",
											"value": "7.0,50.5,7.9,52",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "application/png",
					"description": "",
					"item": [
						{
							"name": "GET data (quantity_7) PNG via header",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"image/png\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data.png?timespan=P10M/2012-12-01&locale=de",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_7",
										"data.png"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P10M/2012-12-01",
											"equals": true,
											"description": ""
										},
										{
											"key": "locale",
											"value": "de",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": ""
									},
									{
										"key": "Accept-Language",
										"value": "en",
										"description": "",
										"disabled": true
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET data (quantity_7) PNG via extension",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"image/png\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data.png?timespan=P10M/2012-12-01&locale=de",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_7",
										"data.png"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P10M/2012-12-01",
											"equals": true,
											"description": ""
										},
										{
											"key": "locale",
											"value": "de",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": ""
									},
									{
										"key": "Accept-Language",
										"value": "en",
										"description": "",
										"disabled": true
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "POST data (quantity_6, quantity_7)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"image/png\");"
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/data",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "image/png",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"timespan\" : \"P10M/2012-12-21TZ\",\n    \"expanded\": true,\n    \"styleOptions\": {\n        \"quantity_7\": {\n        \t\"chartType\": \"line\",\n        \t\"properties\": {\n\t\t        \"color\": \"#0000FF\",\n\t\t        \"lineType\": \"solid\",\n\t\t        \"width\": 1\n\t      }\n        },\n        \"quantity_6\": {\n        \t\"chartType\": \"line\",\n        \t\"properties\": {\n\t\t        \"color\": \"#FF00FF\",\n\t\t        \"lineType\": \"solid\",\n\t\t        \"width\": 2\n\t      }\n        }\n    }\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "application/json",
					"description": "",
					"item": [
						{
							"name": "POST data (quantity_6, quantity_7)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");"
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/data",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"timespan\" : \"P10M/2012-12-21TZ\",\n    \"expanded\": true,\n    \"datasets\": [\n\t    \"quantity_7\",\n\t    \"quantity_6\"\n    ]\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "HTTP errors",
					"description": "",
					"item": [
						{
							"name": "GET data, HTTP 406",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test406();"
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data.xls",
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "de",
										"description": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET data via bbox, HTTP400 (bad request)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test400();",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/data.png?timespan=P200D/2012-11-20TZ&bbox=_7.0,50.5,7.9,52",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_8",
										"data.png"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P200D/2012-11-20TZ",
											"equals": true,
											"description": ""
										},
										{
											"key": "bbox",
											"value": "_7.0,50.5,7.9,52",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "POST RequestSimpleParameterSet HTTP 400",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test400();"
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/data",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "image/png",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"timespan\" : \"P10M/2012-12-21TZ\",\n    \"expanded\": true,\n    \"datasets\": [\n        \"quantity_7\",\n        \"quantity_6\"\n    ]\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "POST data (text_5, quantity_7), HTTP 404",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test404();",
											""
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/datasets/data",
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"timespan\" : \"P10M/2012-12-21TZ\",\n    \"expanded\": true,\n    \"datasets\": [\n        \"quantity_7\",\n        \"text_5\"\n    ]\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "prerendered",
					"description": "",
					"item": [
						{
							"name": "GET prerendered images",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setEnvironmentVariable(\"data.prerendered.images\", jsonData);",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/images",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_7",
										"images"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "resultTime",
											"value": "2012-11-19T13:00:00.000Z",
											"disabled": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en",
										"description": "",
										"disabled": true
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET prerendered images available",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\").startsWith(\"application/json\");",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"var images = postman.getEnvironmentVariable(\"data.prerendered.images\");",
											"",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/images",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_7",
										"images"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "resultTime",
											"value": "2012-11-19T13:00:00.000Z",
											"disabled": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en",
										"description": "",
										"disabled": true
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "resultTimes/ensembles",
					"description": "",
					"item": [
						{
							"name": "GET dataset (quantity_8) extras",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"result times array is not empty\"] = jsonData.resultTimes !== undefined && jsonData.resultTimes.length > 0;",
											"",
											"postman.setEnvironmentVariable(\"datasets.quantity_8.extras.resulttimes\", JSON.stringify(jsonData.resultTimes));",
											"",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/extras",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_8",
										"extras"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "resultTime",
											"value": "2012-11-19T13:00:00.000Z",
											"disabled": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en",
										"description": "",
										"disabled": true
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET data (quantity_8) classified",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var expectedTimestamp = new Date(\"2012-11-18T13:00:00.000Z\").getTime() + \"\";",
											"tests[\"Data for result time is available\"] = jsonData[expectedTimestamp + \"\"] !== undefined ;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/data?timespan=P10M/2012-12-01&locale=de&resultTimes=2012-11-18T14:00:00.000%2b01:00",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_8",
										"data"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P10M/2012-12-01",
											"equals": true,
											"description": ""
										},
										{
											"key": "locale",
											"value": "de",
											"equals": true,
											"description": ""
										},
										{
											"key": "resultTimes",
											"value": "2012-11-18T14:00:00.000%2b01:00",
											"equals": true,
											"description": ""
										},
										{
											"description": "",
											"equals": true,
											"key": "resultTime",
											"value": "2012-11-19T13:00:00.000Z",
											"disabled": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en",
										"description": "",
										"disabled": true
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET data (quantity_8) all classified",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"allClassifiersAvailable = function(classifiers) {",
											"    var times = JSON.parse(classifiers);",
											"    for (var i = 0; i < times.length ; i++) {",
											"        var timestamp = new Date(times[i]).getTime() + \"\";",
											"        console.log(timestamp);",
											"        if (jsonData[timestamp] === undefined) {",
											"            return false;",
											"        }",
											"    }",
											"    return true;",
											"};",
											"",
											"var resultTimes = postman.getEnvironmentVariable(\"datasets.quantity_8.extras.resulttimes\");",
											"tests[\"data is classified for all result times\"] = resultTimes !== undefined && allClassifiersAvailable(resultTimes);",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/data?timespan=P10M/2012-12-01&locale=de&resultTimes=all",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_8",
										"data"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P10M/2012-12-01",
											"equals": true,
											"description": ""
										},
										{
											"key": "locale",
											"value": "de",
											"equals": true,
											"description": ""
										},
										{
											"key": "resultTimes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"description": "",
											"equals": true,
											"key": "resultTime",
											"value": "2012-11-19T13:00:00.000Z",
											"disabled": true
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "accept",
										"value": "image/png",
										"description": "",
										"disabled": true
									},
									{
										"key": "Accept-Language",
										"value": "en",
										"description": "",
										"disabled": true
									}
								],
								"body": {},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "mobile",
					"description": "",
					"item": [
						{
							"name": "GET mobile data (quantity_8)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											""
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/data?timespan=P200D/2012-11-20TZ",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_8",
										"data"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P200D/2012-11-20TZ",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET mobile observations (expanded && interval)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"tests[\"expanded=true lists values explicitly (TODO: add reference datasets later)\"] = jsonData.quantity_8 !== undefined;",
											"",
											"var checkAllContainsGeometry = function(values) {",
											"    for (var i = 0; i < values.length; i++) {",
											"        var geometry = values[i].geometry;",
											"        if (geometry === undefined) {",
											"            return false;",
											"        }",
											"    }",
											"    return true;",
											"};",
											"tests[\"show samplinggeometries along values\"] = checkAllContainsGeometry(jsonData.quantity_8.values);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_8/data?timespan=P200D/2012-11-20TZ&expanded=true&showTimeIntervals=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"datasets",
										"quantity_8",
										"data"
									],
									"query": [
										{
											"key": "timespan",
											"value": "P200D/2012-11-20TZ",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										},
										{
											"key": "showTimeIntervals",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET data (quantity_7)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7",
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"description": "",
								"disabled": true
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (quantity_7) extras",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/extras",
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"description": "",
								"disabled": true
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (quantity_7), csv via header",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"text/csv\");"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data?timespan=P10M/2012-12-01",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"datasets",
								"quantity_7",
								"data"
							],
							"query": [
								{
									"key": "timespan",
									"value": "P10M/2012-12-01",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (quantity_7), zip via header",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/zip\");"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data?timespan=P10M/2012-12-01",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"datasets",
								"quantity_7",
								"data"
							],
							"query": [
								{
									"key": "timespan",
									"value": "P10M/2012-12-01",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/zip",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (timeseries  7), csv via header",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"text/csv\");"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries/7/getData?timespan=P10M/2012-12-01",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"timeseries",
								"7",
								"getData"
							],
							"query": [
								{
									"key": "timespan",
									"value": "P10M/2012-12-01",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (timeseries  7), zip via header",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/zip\");"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries/7/getData?timespan=P10M/2012-12-01",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"timeseries",
								"7",
								"getData"
							],
							"query": [
								{
									"key": "timespan",
									"value": "P10M/2012-12-01",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/zip",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (text_5)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test404();",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/text_5/data?timespan=P10M/2012-12-01&expanded=false",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"datasets",
								"text_5",
								"data"
							],
							"query": [
								{
									"key": "timespan",
									"value": "P10M/2012-12-01",
									"equals": true,
									"description": ""
								},
								{
									"key": "expanded",
									"value": "false",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data quantity-profile data",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var isProfileValue = function(data) {",
									"    for (var i = 0; i < data.length ; i++) {",
									"        var values = data[i].value;",
									"        console.log(values);",
									"        for (var j = 0; j < values.length; j++) {",
									"            var value = values[j];",
									"            console.log(\"value \" + j + \": \" + value);",
									"            if (value",
									"                && (value.vertical !== undefined",
									"                    && value.value !== undefined)) {",
									"                return true;",
									"            }",
									"        }",
									"       ",
									"    }",
									"    return false;",
									"};",
									"",
									"tests[\"firstValue is profile value\"] = isProfileValue(jsonData.values);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity-profile_1/data?timespan=P1D/2012-11-20TZ",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"datasets",
								"quantity-profile_1",
								"data"
							],
							"query": [
								{
									"key": "timespan",
									"value": "P1D/2012-11-20TZ",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept-Language",
								"value": "de",
								"description": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "geometries",
			"description": "",
			"item": [
				{
					"name": "GET geometries (quantity_8)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/geometries?expanded=true&datasets=quantity_8",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"geometries"
							],
							"query": [
								{
									"key": "expanded",
									"value": "true",
									"equals": true,
									"description": ""
								},
								{
									"key": "datasets",
									"value": "quantity_8",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": "filters on\n* FlowRate_Inlet"
					},
					"response": []
				},
				{
					"name": "GET geometries platform_track_9",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"geometry type is LineString\"] = jsonData.geometry.type === \"LineString\";",
									"tests[\"properties contain platform reference\"] = jsonData.properties.platform !== undefined;",
									"tests[\"platform reference is of type mobile\"] = jsonData.properties.platform.platformType.startsWith(\"mobile\")"
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/geometries/platform_track_9",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": "filters on\n* FlowRate_Inlet"
					},
					"response": []
				},
				{
					"name": "GET geometries via phenomenon filter (5,9)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"has correct number of items\"] = jsonData.length === 3;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/geometries?phenomena=9,5&expanded=true",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"geometries"
							],
							"query": [
								{
									"key": "phenomena",
									"value": "9,5",
									"equals": true,
									"description": ""
								},
								{
									"key": "expanded",
									"value": "true",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": "filters on\n* FlowRate_Inlet"
					},
					"response": []
				},
				{
					"name": "GET geometries (quantity)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"has correct number of items\"] = jsonData.length === 3;"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "http://{{host}}:{{port}}{{context}}/api/geometries?valuetypes=quantity",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}{{context}}",
							"path": [
								"api",
								"geometries"
							],
							"query": [
								{
									"key": "valuetypes",
									"value": "quantity",
									"equals": true,
									"description": ""
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": "filters on\n* FlowRate_Inlet"
					},
					"response": []
				},
				{
					"name": "GET site instance",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var helpers = eval(globals.loadHelpers);",
									"",
									"helpers.test200();",
									"helpers.testContentTypeStartsWith(\"application/json\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"has correct id\"] = jsonData.id === \"platform_site_10\";",
									"tests[\"is geoJson feature\"] = jsonData.type === \"Feature\";",
									"tests[\"has reference to platform\"] = jsonData.properties.platform !== undefined;",
									"tests[\"is stationary platform\"] = jsonData.properties.platform.platformType.startsWith(\"stationary\") && jsonData.geometry.type === \"Point\";"
								]
							}
						}
					],
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/geometries/platform_site_10",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": "filters on\n* FlowRate_Inlet"
					},
					"response": []
				}
			]
		},
		{
			"name": "backwards compatible",
			"description": "",
			"item": [
				{
					"name": "parameters (backwards compatible)",
					"description": "",
					"item": [
						{
							"name": "expanded",
							"description": "",
							"item": [
								{
									"name": "GET services expanded",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Counts are available\"] = jsonData[0].quantities !== undefined;",
													"",
													"tests[\"timeseries count is correct\"] = jsonData[0].quantities.timeseries === 2;",
													"",
													"postman.setEnvironmentVariable(\"bw.services.quantities.timeseries\", jsonData[0].quantities.timeseries);",
													"postman.setEnvironmentVariable(\"bw.services.quantities.features\", jsonData[0].quantities.features);",
													"postman.setEnvironmentVariable(\"bw.services.quantities.phenomena\", jsonData[0].quantities.phenomena);",
													"postman.setEnvironmentVariable(\"bw.services.quantities.offerings\", jsonData[0].quantities.offerings);",
													"postman.setEnvironmentVariable(\"bw.services.quantities.procedures\", jsonData[0].quantities.procedures);",
													"postman.setEnvironmentVariable(\"bw.services.quantities.categories\", jsonData[0].quantities.categories);",
													"postman.setEnvironmentVariable(\"bw.services.quantities.stations\", jsonData[0].quantities.stations);",
													"",
													"tests[\"procedures count does not include deleted items\"] = jsonData[0].quantities.procedures === 2;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/services?expanded=true",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"services"
											],
											"query": [
												{
													"key": "expanded",
													"value": "true",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET phenomena expanded",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"console.log(postman.getEnvironmentVariable(\"bw.services.quantities.phenomena\"));",
													"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"bw.services.quantities.phenomena\");",
													"tests[\"Phenomeon 5 is not listed as it is only referenced from deleted dataset\"] = !helpers.containsId(jsonData, \"5\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena?expanded=true",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"phenomena"
											],
											"query": [
												{
													"key": "expanded",
													"value": "true",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET offerings expanded",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"bw.services.quantities.offerings\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/offerings?expanded=true",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"offerings"
											],
											"query": [
												{
													"key": "expanded",
													"value": "true",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET categories expanded",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"bw.services.quantities.categories\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/categories?expanded=true",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"categories"
											],
											"query": [
												{
													"key": "expanded",
													"value": "true",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET procedures expanded",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"bw.services.quantities.procedures\");",
													"tests[\"Deleted Procedure 5 is not listed\"] = !helpers.containsId(jsonData, \"5\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/procedures?expanded=true",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"procedures"
											],
											"query": [
												{
													"key": "expanded",
													"value": "true",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET stations expanded",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"bw.services.quantities.stations\");",
													"tests[\"Platform stationary_insitu_6 is not listed as it is only referenced from deleted dataset\"] = !helpers.containsId(jsonData, \"6\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/stations?expanded=true",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"stations"
											],
											"query": [
												{
													"key": "expanded",
													"value": "true",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET timeseries expanded",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"bw.services.quantities.timeseries\");",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries?expanded=true",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"timeseries"
											],
											"query": [
												{
													"key": "expanded",
													"value": "true",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "filtered",
							"description": "",
							"item": [
								{
									"name": "GET phenomena (mobile)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"tests[\"correct count of filtered phenomena\"] = jsonData.length === 1;"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena?platformtypes=mobile",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"phenomena"
											],
											"query": [
												{
													"key": "platformtypes",
													"value": "mobile",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "HTTP errors",
							"description": "",
							"item": [
								{
									"name": "GET platform, HTTP 404 (unknown platform type)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test404();",
													"",
													"",
													""
												]
											}
										}
									],
									"request": {
										"url": "http://{{host}}:{{port}}{{context}}/api/platforms/unknown_7",
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "",
												"description": "",
												"disabled": true
											},
											{
												"key": "Accept-Language",
												"value": "de",
												"description": "",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET phenomena expanded, HTTP400 (bad request)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test400();",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena/?expanded=invalid",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"phenomena",
												""
											],
											"query": [
												{
													"key": "expanded",
													"value": "invalid",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "GET platforms with feature filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/platforms?platformtypes=all&expanded=true&features=9",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"platforms"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										},
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										},
										{
											"key": "features",
											"value": "9",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET features",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.features\");"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/features?platformtypes=all",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"features"
									],
									"query": [
										{
											"key": "platformtypes",
											"value": "all",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET search",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/search?q=DLZ",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"search"
									],
									"query": [
										{
											"key": "q",
											"value": "DLZ",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "timeseries",
					"description": "",
					"item": [
						{
							"name": "filtered",
							"description": "",
							"item": [
								{
									"name": "GET timeseries via bbox",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"// can't be determined as depending on mobile/insitu flags either procedures or features are used to construct platform entities from",
													"// tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.platforms\");",
													"",
													"tests[\"Platform stationary_insitu_6 is not listed as it is only referenced from deleted dataset\"] = !helpers.containsId(jsonData, \"stationary_insitu_6\");",
													"",
													"let stations = jsonData.map(function(item) {",
													"    return item.station;",
													"});",
													"tests[\"Timeseries within bbox\"] = helpers.allWithinBBox(stations,[7.0,50.5,7.9,52]);",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries?bbox=7.0,50.5,7.9,52",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"timeseries"
											],
											"query": [
												{
													"key": "bbox",
													"value": "7.0,50.5,7.9,52",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET stations via bbox",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"// can't be determined as depending on mobile/insitu flags either procedures or features are used to construct platform entities from",
													"// tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.platforms\");",
													"",
													"tests[\"Platform stationary_insitu_6 is not listed as it is only referenced from deleted dataset\"] = !helpers.containsId(jsonData, \"stationary_insitu_6\");",
													"",
													"tests[\"Timeseries within bbox\"] = helpers.allWithinBBox(jsonData,[7.0,50.5,7.9,52]);",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/stations?bbox=7.0,50.5,7.9,52",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"stations"
											],
											"query": [
												{
													"key": "bbox",
													"value": "7.0,50.5,7.9,52",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET datasets (feature filter)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"helpers.testOneOf([\"7\"], [\"station\", \"id\"], jsonData);",
													""
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries?features=7",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"timeseries"
											],
											"query": [
												{
													"description": "",
													"equals": true,
													"key": "features",
													"value": "7"
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"description": "",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "GET timeseries",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200(\"application/json\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"helpers.testAllMembersPresent(jsonData, [\"id\", \"label\", \"uom\", \"station\"]);",
											""
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/timeseries",
								"method": "GET",
								"header": [],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET timeseries 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200(\"application/json\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"helpers.testAllMembersPresent([jsonData], [\"id\", \"label\", \"uom\", \"station\", \"parameters\", \"firstValue\", \"lastValue\"]);"
										]
									}
								}
							],
							"request": {
								"url": "http://{{host}}:{{port}}{{context}}/api/timeseries/7",
								"method": "GET",
								"header": [],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET timeseries 7 hints && status",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200(\"application/json\");",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"helpers.testAllMembersPresent([jsonData], [\"statusIntervals\", \"renderingHints\"]);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries/7?status_intervals=true&rendering_hints=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"timeseries",
										"7"
									],
									"query": [
										{
											"key": "status_intervals",
											"value": "true",
											"equals": true,
											"description": ""
										},
										{
											"key": "rendering_hints",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [],
								"body": {},
								"description": ""
							},
							"response": []
						},
						{
							"name": "GET datasets expanded",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var helpers = eval(globals.loadHelpers);",
											"",
											"helpers.test200();",
											"helpers.testContentTypeStartsWith(\"application/json\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"helpers.testAllMembersPresent(jsonData, [\"id\", \"label\", \"uom\", \"station\", \"parameters\", \"firstValue\", \"lastValue\"]);"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries?expanded=true",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}{{context}}",
									"path": [
										"api",
										"timeseries"
									],
									"query": [
										{
											"key": "expanded",
											"value": "true",
											"equals": true,
											"description": ""
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": ""
									},
									{
										"key": "Accept",
										"value": "application/json",
										"description": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "getData",
					"description": "",
					"item": [
						{
							"name": "application/png",
							"description": "",
							"item": [
								{
									"name": "GET data (quantity_7) PNG via header",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"image/png\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries/7/getData?timespan=P10M/2012-12-01&locale=de",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"timeseries",
												"7",
												"getData"
											],
											"query": [
												{
													"key": "timespan",
													"value": "P10M/2012-12-01",
													"equals": true,
													"description": ""
												},
												{
													"key": "locale",
													"value": "de",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "image/png",
												"description": ""
											},
											{
												"key": "Accept-Language",
												"value": "en",
												"description": "",
												"disabled": true
											}
										],
										"body": {},
										"description": ""
									},
									"response": []
								},
								{
									"name": "GET data (quantity_7) PNG via extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"image/png\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries/7/getData.png?timespan=P10M/2012-12-01&locale=de",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"timeseries",
												"7",
												"getData.png"
											],
											"query": [
												{
													"key": "timespan",
													"value": "P10M/2012-12-01",
													"equals": true,
													"description": ""
												},
												{
													"key": "locale",
													"value": "de",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept-Language",
												"value": "en",
												"description": "",
												"disabled": true
											}
										],
										"body": {},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "application/json",
							"description": "",
							"item": [
								{
									"name": "GET data (quantity_7)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200(\"application/json\");"
												]
											}
										}
									],
									"request": {
										"url": {
											"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries/7/getData?timespan=P10M/2012-12-01&locale=de",
											"protocol": "http",
											"host": [
												"{{host}}"
											],
											"port": "{{port}}{{context}}",
											"path": [
												"api",
												"timeseries",
												"7",
												"getData"
											],
											"query": [
												{
													"key": "timespan",
													"value": "P10M/2012-12-01",
													"equals": true,
													"description": ""
												},
												{
													"key": "locale",
													"value": "de",
													"equals": true,
													"description": ""
												}
											],
											"variable": []
										},
										"method": "GET",
										"header": [
											{
												"key": "accept",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept-Language",
												"value": "en",
												"description": "",
												"disabled": true
											}
										],
										"body": {},
										"description": ""
									},
									"response": []
								},
								{
									"name": "POST data (quantity_6, quantity_7)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"var helpers = eval(globals.loadHelpers);",
													"",
													"helpers.test200();",
													"helpers.testContentTypeStartsWith(\"application/json\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"data available for 6 \"] = jsonData[\"6\"] !== undefined;",
													"tests[\"data available for 7 \"] = jsonData[\"7\"] !== undefined;"
												]
											}
										}
									],
									"request": {
										"url": "http://{{host}}:{{port}}{{context}}/api/timeseries/getData",
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": ""
											},
											{
												"key": "Accept",
												"value": "application/json",
												"description": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"timespan\" : \"P10M/2012-12-21TZ\",\n    \"expanded\": true,\n    \"timeseries\": [\n\t    \"7\",\n\t    \"6\"\n    ]\n}"
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "GET resources",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"description": ""
			},
			"response": []
		}
	]
}