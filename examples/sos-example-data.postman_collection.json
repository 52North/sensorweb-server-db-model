{
	"variables": [],
	"info": {
		"name": "sos-example-data",
		"_postman_id": "708d0de5-d0dc-e12c-6b58-dbb4dc1ecfd5",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "todo",
			"description": "",
			"item": [
				{
					"name": "Dataset via DomainId",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/data?datasets=http://to.be/done/8&matchDomainIds=true&timespan=PT36H/2012-11-20T16:00:00Z&handleAs=meansurement",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET datasets quantity_7 prer. img",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET datasets via domainId",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets?datasets=http://to.be/done/8&matchDomainIds=true",
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "GET data (phenomenon filter), csv",
					"request": {
						"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data.zip?timespan=P10M/2012-12-01",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/zip",
								"description": "",
								"disabled": true
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "GET services expanded",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Counts are available\"] = jsonData[0].quantities !== undefined;",
							"",
							"tests[\"datasets count does not include unpublished/deleted items\"] = jsonData[0].quantities.datasets === 10;",
							"",
							"postman.setEnvironmentVariable(\"services.quantities.datasets\", jsonData[0].quantities.datasets);",
							"postman.setEnvironmentVariable(\"services.quantities.features\", jsonData[0].quantities.features);",
							"postman.setEnvironmentVariable(\"services.quantities.phenomena\", jsonData[0].quantities.phenomena);",
							"postman.setEnvironmentVariable(\"services.quantities.offerings\", jsonData[0].quantities.offerings);",
							"postman.setEnvironmentVariable(\"services.quantities.procedures\", jsonData[0].quantities.procedures);",
							"postman.setEnvironmentVariable(\"services.quantities.categories\", jsonData[0].quantities.categories);",
							"postman.setEnvironmentVariable(\"services.quantities.platforms\", jsonData[0].quantities.platforms);",
							"",
							"tests[\"procedures count does not include deleted items\"] = data[\"procedureCount\"] === 8;"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/services?platformtypes=all&expanded=true&datasets=foo",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"services"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						},
						{
							"key": "datasets",
							"value": "foo",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET phenomena expanded",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.phenomena\");",
							"",
							"var containsId = function(data, id) {",
							"    for (var i = 0; i < data.length ; i++) {",
							"        if (data[i] && data[i].id === id) {",
							"            return true;",
							"        }",
							"    }",
							"    return false;",
							"};",
							"tests[\"Phenomeon 5 is not listed as it is only referenced from deleted dataset\"] = !containsId(jsonData, \"5\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena?platformtypes=all&expanded=true",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"phenomena"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET offerings expanded",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.offerings\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/offerings?platformtypes=all&expanded=true",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"offerings"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET categories expanded",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.categories\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/categories?platformtypes=all&expanded=true",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"categories"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET procedures expanded",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.procedures\");",
							"",
							"var containsId = function(data, id) {",
							"    for (var i = 0; i < data.length ; i++) {",
							"        if (data[i] && data[i].id === id) {",
							"            return true;",
							"        }",
							"    }",
							"    return false;",
							"};",
							"tests[\"Deleted Procedure 5 is not listed\"] = !containsId(jsonData, \"5\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/procedures?platformtypes=all&expanded=true",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"procedures"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET features",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.features\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/features?platformtypes=all",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"features"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET platforms expanded",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"// can't be determined as depending on mobile/insitu flags either procedures or features are used to construct platform entities from",
							"// tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.platforms\");",
							"",
							"var containsId = function(data, id) {",
							"    for (var i = 0; i < data.length ; i++) {",
							"        if (data[i] && data[i].id === id) {",
							"            return true;",
							"        }",
							"    }",
							"    return false;",
							"};",
							"tests[\"Platform stationary_insitu_6 is not listed as it is only referenced from deleted dataset\"] = !containsId(jsonData, \"stationary_insitu_6\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/platforms?platformtypes=all&expanded=true",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"platforms"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET platforms with feature filter",
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/platforms?platformtypes=all&expanded=true&features=9",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"platforms"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "all",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						},
						{
							"key": "features",
							"value": "9",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"element count match those counted at services\"] = jsonData.length == postman.getEnvironmentVariable(\"services.quantities.datasets\");",
							"var containsId = function(data, id) {",
							"    for (var i = 0; i < data.length ; i++) {",
							"        if (data[i] && data[i].id === id) {",
							"            return true;",
							"        }",
							"    }",
							"    return false;",
							"};",
							"tests[\"Deleted Dataset text_5 is not listed\"] = !containsId(jsonData, \"text_5\");",
							"tests[\"Unpublished Dataset quantity_10 is not listed\"] = !containsId(jsonData, \"quantity_10\");"
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets (stationary && insitu)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"No datasets from mobile_insitu platforms\"] = !responseBody.has(\"mobile_insitu\");",
							"tests[\"No datasets from mobile_remote platforms\"] = !responseBody.has(\"mobile_remote\");",
							"tests[\"No datasets from stationary_remote platforms\"] = !responseBody.has(\"stationary_remote\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?platformtypes=stationary,insitu",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"datasets"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "stationary,insitu",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets (mobile)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"No datasets from stationary_insitu platforms\"] = !responseBody.has(\"stationary_insitu\");",
							"tests[\"No datasets from stationary_remote platforms\"] = !responseBody.has(\"stationary_remote\");"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?platformtypes=mobile",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"datasets"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "mobile",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets with phenomena filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var navigateTo = function(path, json) {",
							"    path = path || [];",
							"    return path.reduce((o, n) => o[n], json);",
							"};",
							"",
							"var checkFilteredParameters = function(parameter, ids) {",
							"    for (var i = 0; i < jsonData.length; i++) {",
							"    var path = [\"datasetParameters\", parameter, \"id\"];",
							"        var parameterId = navigateTo(path, jsonData[i]);",
							"        if (!ids.includes(parameterId)) {",
							"            return false;",
							"        }",
							"    }",
							"    return true;",
							"};",
							"",
							"// phenomenon 5 is linked with unpublished dataset",
							"tests[\"Contains filtered phenomena only\"] = checkFilteredParameters(\"phenomenon\", [\"9\",\"6\"])"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?phenomena=9,5,6&expanded=true",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"datasets"
					],
					"query": [
						{
							"key": "phenomena",
							"value": "9,5,6",
							"equals": true,
							"description": ""
						},
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets with valuetype (text) filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Correct count of datasets with valuetype 'text'\"] = jsonData.length === 3;",
							"",
							"var navigateTo = function(path, json) {",
							"    path = path || [];",
							"    return path.reduce((o, n) => o[n], json);",
							"};",
							"",
							"var checkFilteredParameters = function(filter) {",
							"    for (var i = 0; i < jsonData.length; i++) {",
							"        var valueType = navigateTo([\"valueType\"], jsonData[i]);",
							"        if (!filter.includes(valueType)) {",
							"            return false;",
							"        }",
							"    }",
							"    return true;",
							"};",
							"",
							"",
							"tests[\"Contains filtered valueTypes only\"] = checkFilteredParameters([\"text\"])",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?valueTypes=text",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"datasets"
					],
					"query": [
						{
							"key": "valueTypes",
							"value": "text",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets with valuetype (quantity|text) filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"Your test name\"] = jsonData.length === 6;",
							"",
							"var navigateTo = function(path, json) {",
							"    path = path || [];",
							"    return path.reduce((o, n) => o[n], json);",
							"};",
							"",
							"var checkFilteredParameters = function(filter) {",
							"    for (var i = 0; i < jsonData.length; i++) {",
							"        var valueType = navigateTo([\"valueType\"], jsonData[i]);",
							"        if (!filter.includes(valueType)) {",
							"            return false;",
							"        }",
							"    }",
							"    return true;",
							"};",
							"",
							"tests[\"Contains filtered valueTypes only\"] = checkFilteredParameters([\"text\", \"quantity\"]);"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/datasets?valueTypes=text,quantity",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"datasets"
					],
					"query": [
						{
							"key": "valueTypes",
							"value": "text,quantity",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets quantity_7",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"item has correct id\"] = jsonData.id === \"quantity_7\";",
							"tests[\"item has correct valueType\"] = jsonData.valueType === \"quantity\";",
							"tests[\"item has first value\"] = jsonData.firstValue !== undefined;",
							"tests[\"item has last value\"] = jsonData.lastValue !== undefined;",
							"tests[\"platformType matches type of platform\"] = jsonData.platformType === jsonData.datasetParameters.platform.platformType;",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET datasets quantity_7 extras",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"dataset has resultTime extras\"] = jsonData.resultTimes !== undefined;"
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/extras",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET phenomena with platform filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"correct count of filtered phenomena\"] = jsonData.length === 1;"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/phenomena?platformtypes=mobile",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"phenomena"
					],
					"query": [
						{
							"key": "platformtypes",
							"value": "mobile",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET geometries with dataset filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/geometries?expanded=true&datasets=quantity_8",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"geometries"
					],
					"query": [
						{
							"key": "expanded",
							"value": "true",
							"equals": true,
							"description": ""
						},
						{
							"key": "datasets",
							"value": "quantity_8",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": "filters on\n* FlowRate_Inlet"
			},
			"response": []
		},
		{
			"name": "GET geometries platform_track_9",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"geometry type is LineString\"] = jsonData.geometry.type === \"LineString\";",
							"tests[\"properties contain platform reference\"] = jsonData.properties.platform !== undefined;",
							"tests[\"platform reference is of type mobile\"] = jsonData.properties.platform.platformType.startsWith(\"mobile\")"
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/geometries/platform_track_9",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": "filters on\n* FlowRate_Inlet"
			},
			"response": []
		},
		{
			"name": "GET geometries with value type filter",
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/geometries?datasets=quantity_7",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": "filters on\n* FlowRate_Inlet"
			},
			"response": []
		},
		{
			"name": "GET geometries, expanded with csv-filter",
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/geometries?phenomena=9,5&expanded=true",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": "filters on\n* FlowRate_Inlet"
			},
			"response": []
		},
		{
			"name": "GET site instance",
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/geometries/platform_site_10",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": "filters on\n* FlowRate_Inlet"
			},
			"response": []
		},
		{
			"name": "GET data (quantity_7)",
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data.png?timespan=P10M/2012-12-01&locale=de",
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "image/png",
						"description": ""
					},
					{
						"key": "Accept-Language",
						"value": "en",
						"description": "",
						"disabled": true
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET data (quantity_7), csv/zip via header",
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity_7/data?timespan=P10M/2012-12-01",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"datasets",
						"quantity_7",
						"data"
					],
					"query": [
						{
							"key": "timespan",
							"value": "P10M/2012-12-01",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/csv",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/zip",
						"description": "",
						"disabled": true
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET data (timeseries  7), csv/zip via header",
			"request": {
				"url": {
					"raw": "http://{{host}}:{{port}}{{context}}/api/timeseries/7/getData?timespan=P10M/2012-12-01",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}{{context}}",
					"path": [
						"api",
						"timeseries",
						"7",
						"getData"
					],
					"query": [
						{
							"key": "timespan",
							"value": "P10M/2012-12-01",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/csv",
						"description": "",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/zip",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET data (text_5)",
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/text_5/data?timespan=P10M/2012-12-01",
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "POST data (text_5, quantity_7)",
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/data",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"timespan\" : \"P10M/2012-12-21TZ\",\n    \"expanded\": true,\n    \"datasets\": [\n        \"quantity_7\",\n        \"text_5\"\n    ]\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET dataset (show interval)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"first value contains timestart\"] = jsonData.firstValue.timestart !== undefined;",
							"tests[\"first value contains timeend\"] = jsonData.firstValue.timeend !== undefined;"
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/8?expanded=true&platformtypes=all&showTimeIntervals=true",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET data (show interval)",
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/8/data?timespan=P200D/2012-11-20TZ&expanded=true&platformtypes=all&showTimeIntervals=true",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET dataset quantity-profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"platformType is stationary_insitu\"] = jsonData.platformType === 'stationary_insitu';",
							"tests[\"valueType is quantity-profile\"] = jsonData.valueType === 'quantity-profile';",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity-profile_1/",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "GET data quantity-profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"platformType is stationary_insitu\"] = jsonData.platformType === 'stationary_insitu';",
							"tests[\"valueType is quantity-profile\"] = jsonData.valueType === 'quantity-profile';",
							""
						]
					}
				}
			],
			"request": {
				"url": "http://{{host}}:{{port}}{{context}}/api/datasets/quantity-profile_1/data?timespan=P1D/2012-11-20TZ&expanded=true",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Accept-Language",
						"value": "de",
						"description": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"legend\": true,\r\n  \"timespan\": \"P0Y0M3D/2013-01-31TZ\",\r\n  \"width\": 400,\r\n  \"height\": 300,\r\n  \"language\": \"de\",\r\n  \"grid\": true,\r\n  \"styleOptions\": {\r\n    \"328\": {\r\n      \"chartType\": \"line\",\r\n      \"properties\": {\r\n        \"color\": \"#0000FF\",\r\n        \"lineType\": \"solid\",\r\n        \"width\": 1\r\n      }\r\n    },\r\n    \"159\": {\r\n      \"chartType\": \"bar\",\r\n      \"properties\": {\r\n        \"color\": \"#2f2f2f\",\r\n        \"interval\": \"byHour\",\r\n        \"width\": 0.7\r\n      }\r\n    }\r\n  }\r\n}"
				},
				"description": ""
			},
			"response": []
		}
	]
}