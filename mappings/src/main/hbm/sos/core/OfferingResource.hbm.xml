<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="org.n52.series.db.beans">
    <class name="OfferingEntity" table="offering">
        <comment>Table to store the offering information. Mapping file:
            mapping/core/Offering.hbm.xml</comment>
        <id name="id" type="long">
            <column name="id">
                <comment>Table primary key, used for relations</comment>
            </column>
            <generator class="native">
                <param name="sequence_name">offering_seq</param>
            </generator>
        </id>

    <!-- <many-to-one name="service" class="ServiceEntity" foreign-key="offeringServiceFk"> -->
    <!-- <column name="service" not-null="true" /> -->
    <!-- </many-to-one> -->

        <many-to-one name="codespace" class="CodespaceEntity" foreign-key="offCodespaceEntityIdentifierFk">
            <column name="codespace">
                <comment>Relation/foreign key to the codespace table. Contains the
                    gml:identifier codespace. Optional</comment>
            </column>
        </many-to-one>

        <many-to-one name="codespaceName" class="CodespaceEntity" foreign-key="offCodespaceEntityNameFk">
            <column name="codespaceName">
                <comment>Relation/foreign key to the codespace table. Contains the
                    gml:name codespace. Optional</comment>
            </column>
        </many-to-one>

        <property name="domainId" type="string">
            <column name="domainId" not-null="true" unique-key="offIdentifierUK">
                <comment>The identifier of the offering, gml:identifier. Used as
                    parameter for queries. Unique</comment>
            </column>
        </property>

        <property name="name" type="string">
            <column name="name">
                <comment>The name of the offering, gml:name. If available, displyed
                    in the contents of the Capabilites. Optional</comment>
            </column>
        </property>

        <property name="description" type="string">
            <column name="description">
                <comment>Description of the offering, gml:description. Optional</comment>
            </column>
        </property>

        <property name="phenomenonTimeStart" type="timestamp">
            <column name="phenomenontimestart" length="29" not-null="true">
                <comment>Time stamp when the offering was started or phenomenon was observed</comment>
            </column>
        </property>

        <property name="phenomenonTimeEnd" type="timestamp">
            <column name="phenomenontimeend" length="29" not-null="true">
                <comment>Time stamp when the offering was stopped or phenomenon was observed</comment>
            </column>
        </property>

        <property name="resultTimeStart" type="timestamp">
            <column name="resulttimestart" length="29" not-null="true">
                <comment>Time stamp when the offering was published or result was published/available</comment>
            </column>
        </property>

        <property name="resultTimeEnd" type="timestamp">
            <column name="resulttimeend" length="29" not-null="true">
                <comment>Time stamp when the offering was published or result was published/available</comment>
            </column>
        </property>

        <property name="validTimeStart" type="timestamp">
            <column name="validtimestart" length="29" not-null="true">
                <comment>Time stamp until when the offering is valid or results are valid</comment>
            </column>
        </property>

        <property name="validTimeEnd" type="timestamp">
            <column name="validtimeend" length="29" not-null="true">
                <comment>Time stamp until when the offering is valid or results are valid</comment>
            </column>
        </property>

        <component class="GeometryEntity" name="geometryEntity">
            <!-- <property column="lat" name="lat" type="double" /> <property column="lon" name="lon" type="double" /> -->
            <property column="geom" name="geometry" type="jts_geometry" />
        </component>

        <set name="children" table="offeringrelation" inverse="false" fetch="select">
            <comment>Relation table to store offering hierarchies. E.g. define a
                parent in a query and all childs are also contained in the response.
                Mapping file: mapping/core/Offering.hbm.xml</comment>
            <key column="parent" not-null="true" foreign-key="offchildrenparentfk" />
            <many-to-many class="OfferingEntity" column="child" foreign-key="offchildrenchildfk" />
        </set>

        <set name="parents" table="offeringrelation" inverse="false" fetch="select">
            <key column="child" not-null="true" foreign-key="offparentschildfk" />
            <many-to-many class="OfferingEntity" column="parent" foreign-key="offparentsparentfk" />
        </set>

        <set name="observationTypes" table="offeringallowedobservationtype" inverse="false" fetch="select">
            <comment>Table to store relations between offering and allowed
                observationTypes, defined in InsertSensor request. Mapping file:
                mapping/transactional/TOffering.hbm.xml</comment>
            <key foreign-key="offobstypeofffk">
                <column name="offering" not-null="true">
                    <comment>Foreign Key (FK) to the related offering. Contains
                        "offering".offeringid</comment>
                </column>
            </key>
            <many-to-many class="ObservationTypeEntity" foreign-key="offeringObservationTypeFk">
                <column name="observationtype" not-null="true">
                    <comment>Foreign Key (FK) to the related observationType. Contains
                        "observationType".observationTypeId</comment>
                </column>
            </many-to-many>
        </set>

        <set name="relatedFeatures" table="offeringhasrelatedfeature" inverse="false">
            <comment>Table to store relations between offering and associated
                relatedFeatures. Mapping file:
                mapping/transactional/TOffering.hbm.xml</comment>
            <key foreign-key="offrelfeatofffk">
                <column name="offering" not-null="true">
                    <comment>Foreign Key (FK) to the related offering. Contains
                        "offering".offeringid</comment>
                </column>
            </key>
            <many-to-many class="RelatedFeatureEntity" foreign-key="offeringRelatedFeatureFk">
                <column name="relatedfeature" not-null="true">
                    <comment>Foreign Key (FK) to the related reladedFeature. Contains
                        "reladedFeature".relatedFeatureId</comment>
                </column>
            </many-to-many>
        </set>

        <set name="featureTypes" table="offeringallowedfeaturetype" inverse="false">
            <comment>Table to store relations between offering and allowed
                featureOfInterestTypes, defined in InsertSensor request. Mapping
                file: mapping/transactional/TOffering.hbm.xml</comment>
            <key foreign-key="offfeattypeofffk">
                <column name="offering" not-null="true">
                    <comment>Foreign Key (FK) to the related offering. Contains
                        "offering".offeringid</comment>
                </column>
            </key>
            <many-to-many class="FeatureTypeEntity" foreign-key="offeringFeatureTypeFk">
                <column name="featuretype" not-null="true">
                    <comment>Foreign Key (FK) to the related featureOfInterestTypeId.
                        Contains "featureOfInterestType".featureOfInterestTypeId</comment>
                </column>
            </many-to-many>
        </set>

        <set name="translations" table="i18noffering" inverse="true" fetch="select">
            <key column="offering" foreign-key="offtransofffk" />
            <many-to-many unique="true" column="id" class="org.n52.series.db.beans.i18n.I18nOfferingEntity"
                foreign-key="offtransi18nfk" />
        </set>
    </class>

    <class name="org.n52.series.db.beans.i18n.I18nOfferingEntity" table="i18noffering">
        <id name="id" type="long">
            <column name="id" />
            <generator class="native">
                <param name="sequence">i18noffering_seq</param>
            </generator>
        </id>

        <property name="locale" type="string" />
        <property name="name" type="string" />
        <property name="description" type="string" />
    </class>
</hibernate-mapping>
