<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="org.n52.series.db.beans">
    <class name="DataEntity" table="observation">
        <id name="pkid" type="long">
            <column name="pkid" />
            <generator class="native">
                <param name="sequence">observation_seq</param>
            </generator>
        </id>

        <many-to-one name="codespace" class="CodespaceEntity" foreign-key="obsCodespaceEntityIdentifierFk">
            <column name="codespace">
                <comment>Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional</comment>
            </column>
        </many-to-one>

        <many-to-one name="codespaceName" class="CodespaceEntity" foreign-key="obsCodespaceEntityNameFk">
            <column name="codespaceName">
                <comment>The name of the observation, gml:name. Optional</comment>
            </column>
        </many-to-one>

        <property name="phenomenonTimeStart" type="timestamp">
            <column index="obsPhenTimeStartIdx" name="phenomenonTimeStart" length="29" not-null="true">
                <comment>Time stamp when the observation was started or phenomenon was observed</comment>
            </column>
        </property>

        <property name="phenomenonTimeEnd" type="timestamp">
            <column index="obsPhenTimeEndIdx" name="phenomenonTimeEnd" length="29" not-null="true">
                <comment>Time stamp when the observation was stopped or phenomenon was observed</comment>
            </column>
        </property>

        <property name="resultTime" type="timestamp">
            <column index="obsResultTimeIdx" name="resultTime" length="29" not-null="true">
                <comment>Time stamp when the observation was published or result was published/available</comment>
            </column>
        </property>

        <property name="domainId" type="string">
            <column name="domainId">
                <comment>The identifier of the observation, gml:identifier. Used as parameter for queries. Optional but
                    unique</comment>
            </column>
        </property>

        <property name="name" type="string">
            <column name="name">
                <comment>The name of the observation, gml:name. Optional</comment>
            </column>
        </property>

        <property name="description" type="string">
            <column name="description">
                <comment>Description of the observation, gml:description. Optional</comment>
            </column>
        </property>

        <property name="deleted" type="org.hibernate.type.TrueFalseType">
            <column name="deleted" not-null="true" default="'F'" check="deleted in ('T','F')">
                <comment>Flag to indicate that this series is deleted or not. Set if the related procedure is deleted
                    via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)</comment>
            </column>
        </property>

        <property name="validTimeStart" type="timestamp">
            <column name="validTimeStart" length="29" not-null="false" default="NULL">
                <comment>Start time stamp for which the observation/result is valid, e.g. used for forecasting. Optional</comment>
            </column>
        </property>

        <property name="validTimeEnd" type="timestamp">
            <column name="validTimeEnd" length="29" not-null="false" default="NULL">
                <comment>End time stamp for which the observation/result is valid, e.g. used for forecasting. Optional</comment>
            </column>
        </property>

        <property name="child" type="org.hibernate.type.TrueFalseType">
            <column name="child" not-null="true" default="'F'" length="1" check="child in ('T','F')">
                <comment>Flag to indicate that this observation is a child observation for complex observation</comment>
            </column>
        </property>

        <property name="parent" type="org.hibernate.type.TrueFalseType">
            <column name="parent" not-null="true" default="'F'" length="1" check="parent in ('T','F')">
                <comment>Flag to indicate that this observation is a parent observation for complex observation</comment>
            </column>
        </property>

        <component class="GeometryEntity" name="geometryEntity">
            <!-- <property column="lat" name="lat" type="double" /> <property column="lon" name="lon" type="double" /> -->
            <property column="samplingGeometry" name="geometry" type="org.hibernate.spatial.GeometryType" />
        </component>

        <set inverse="true" name="datasets" table="datasetdata">
            <key column="pkid" not-null="true" foreign-key="datadatafk" />
            <one-to-many class="DatasetEntity" />
        </set>

        <!-- Or add only to specific joined-subclasses -->
        <set inverse="false" name="parameters" table="observationparameter" cascade="delete-orphan">
            <key column="observation" not-null="true" foreign-key="obsparamdatafk" />
            <many-to-many class="org.n52.series.db.beans.parameter.Parameter" column="parameter"
                foreign-key="obsparamparamfk" />
        </set>

        <set name="relatedObservations" table="relatedobservations" fetch="join" access="field" cascade="all">
            <key>
                <column name="observation" not-null="true" index="relatedObsObsIdx" />
            </key>
            <one-to-many class="RelatedDataEntity" />
        </set>

        <joined-subclass extends="DataEntity" name="QuantityDataEntity" table="numericValue">
            <key column="observation" foreign-key="dataNumericValueFk" />
            <property column="value" name="value" type="double" />
        </joined-subclass>

        <joined-subclass extends="DataEntity" name="TextDataEntity" table="textValue">
            <key column="observation" foreign-key="dataTextValueFk" />
            <property column="value" name="value" type="string" />
            <property name="valueIdentifier" type="string">
                <column name="domainId">
                    <comment>SweText observation identifier</comment>
                </column>
            </property>
            <property name="valueName" type="string">
                <column name="name">
                    <comment>SweText observation name</comment>
                </column>
            </property>
            <property name="valueDescription" type="string">
                <column name="description">
                    <comment>SweText observation description</comment>
                </column>
            </property>
        </joined-subclass>

        <joined-subclass extends="DataEntity" name="CountDataEntity" table="countValue">
            <key column="observation" foreign-key="dataCountValueFk" />
            <property column="value" name="value" type="integer" />
        </joined-subclass>

        <joined-subclass name="BlobDataEntity" extends="DataEntity" table="blobvalue">
            <comment>Value table for blob observation</comment>
            <key foreign-key="dataBlobValueFk">
                <column name="observation">
                    <comment>Foreign Key (FK) to the related observation from the observation table. Contains
                        "observation".data</comment>
                </column>
            </key>
            <property name="value" type="blob">
                <column name="value">
                    <comment>Blob observation value</comment>
                </column>
            </property>
        </joined-subclass>

        <joined-subclass name="BooleanDataEntity" extends="DataEntity" table="booleanvalue" check="value in ('T','F')">
            <comment>Value table for boolean observation</comment>
            <key foreign-key="observationBooleanValueFk">
                <column name="observation">
                    <comment>Foreign Key (FK) to the related observation from the observation table. Contains
                        "observation".data</comment>
                </column>
            </key>
            <property name="value" type="org.hibernate.type.TrueFalseType">
                <column name="value">
                    <comment>Boolean observation value</comment>
                </column>
            </property>
        </joined-subclass>

        <joined-subclass name="CategoryDataEntity" extends="DataEntity" table="categoryvalue">
            <comment>Value table for category observation</comment>
            <key foreign-key="observationCategoryValueFk">
                <column name="observation">
                    <comment>Foreign Key (FK) to the related observation from the observation table. Contains
                        "observation".data</comment>
                </column>
            </key>
            <property name="value" type="string">
                <column name="value">
                    <comment>Category observation value</comment>
                </column>
            </property>
            <property name="valueIdentifier" type="string">
                <column name="domainId">
                    <comment>SweCategory observation identifier</comment>
                </column>
            </property>
            <property name="valueName" type="string">
                <column name="name">
                    <comment>SweCategory observation name</comment>
                </column>
            </property>
            <property name="valueDescription" type="string">
                <column name="description">
                    <comment>SweCategory observation description</comment>
                </column>
            </property>
        </joined-subclass>

        <joined-subclass name="GeometryDataEntity" extends="DataEntity" table="geometryvalue">
            <comment>Value table for geometry observation</comment>
            <key foreign-key="observationGeometryValueFk">
                <column name="observation">
                    <comment>Foreign Key (FK) to the related observation from the observation table. Contains
                        "observation".data</comment>
                </column>
            </key>
            <component class="GeometryEntity" name="geometryEntity">
                <!-- <property column="lat" name="lat" type="double" /> <property column="lon" name="lon" type="double" /> -->
                <property column="value" name="geometry" type="org.hibernate.spatial.GeometryType" />
            </component>
        </joined-subclass>

        <joined-subclass name="SweDataArrayDataEntity" extends="DataEntity" table="swedataarrayvalue">
            <comment>Value table for SweDataArray observation</comment>
            <key foreign-key="observationSweDataArrayValueFk">
                <column name="observation">
                    <comment>Foreign Key (FK) to the related observation from the observation table. Contains
                        "observation".data</comment>
                </column>
            </key>
            <property name="value" type="org.hibernate.type.StringClobType">
                <column name="value">
                    <comment>SweDataArray observation value</comment>
                </column>
            </property>
        </joined-subclass>

        <joined-subclass name="ComplexDataEntity" extends="DataEntity" table="complexvalue">
            <comment>Value table for complex observation</comment>
            <key foreign-key="observationComplexValueFk">
                <column name="observation">
                    <comment>Foreign Key (FK) to the related observation from the observation table. Contains
                        "observation".data</comment>
                </column>
            </key>
            <set name="value" table="compositeobservation" inverse="false" sort="natural" cascade="delete-orphan">
                <comment>Relation table for complex parent/child observations</comment>
                <key foreign-key="observationParentFK">
                    <column name="observation" not-null="true">
                        <comment>Foreign Key (FK) to the related parent complex observation. Contains "observation".data</comment>
                    </column>
                </key>
                <many-to-many class="DataEntity" foreign-key="observationChildFk">
                    <column name="child" not-null="true">
                        <comment>Foreign Key (FK) to the related child complex observation. Contains "observation".data</comment>
                    </column>
                </many-to-many>
            </set>
        </joined-subclass>

        <joined-subclass name="ProfileDataEntity" extends="DataEntity" table="profilevalue">
            <comment>Value table for profile observation</comment>
            <key foreign-key="observationProfileValueFk">
                <column name="observation">
                    <comment>Foreign Key (FK) to the related observation from the observation table. Contains
                        "observation".data</comment>
                </column>
            </key>
            <property name="fromLevel" type="double">
                <column name="fromlevel" not-null="false">
                    <comment>Value of fromLevel</comment>
                </column>
            </property>
            <property name="toLevel" type="double">
                <column name="tolevel" not-null="false">
                    <comment>Value of toLevel</comment>
                </column>
            </property>
            <many-to-one name="levelUnit" class="UnitEntity" fetch="select" lazy="no-proxy" foreign-key="profileUnitFk">
                <column name="levelunit" not-null="false">
                    <comment>Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional</comment>
                </column>
            </many-to-one>
            <set name="value" table="profileobservation" inverse="false" sort="natural" cascade="delete-orphan">
                <comment>Relation table for complex parent/child observations</comment>
                <key foreign-key="profileObsParentFK">
                    <column name="observation" not-null="true">
                        <comment>Foreign Key (FK) to the related parent complex observation. Contains "observation".data</comment>
                    </column>
                </key>
                <many-to-many class="DataEntity" foreign-key="oprofileObsChildFk">
                    <column name="child" not-null="true">
                        <comment>Foreign Key (FK) to the related child complex observation. Contains "observation".data</comment>
                    </column>
                </many-to-many>
            </set>
        </joined-subclass>

    </class>
</hibernate-mapping>
