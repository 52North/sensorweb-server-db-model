<hibernate-mapping package="org.n52.series.db.beans.sampling"
    xmlns="http://www.hibernate.org/xsd/hibernate-mapping"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.hibernate.org/xsd/hibernate-mapping http://www.hibernate.org/xsd/hibernate-mapping/hibernate-mapping-4.0.xsd">
    <class name="SamplingEntity"
        table="sampling">
        <comment>Storage of the Description of a sampling that was performed in a measuring program.</comment>
        <id name="id" type="long">
            <column name="sampling_id">
                <comment>PK column of the table</comment>
            </column>
            <generator class="native">
                <param name="sequence_name">sampling_seq</param>
            </generator>
        </id>

        <many-to-one name="measuringProgram" class="MeasuringProgramEntity" foreign-key="fk_measuring_program">
            <column name="fk_measuring_program_id" not-null="true" index="idx_sampling_measuring_program">
                <comment>Reference to the measuring program to which this sampling belongs.</comment>
            </column>
        </many-to-one>

        <many-to-one class="org.n52.series.db.beans.ServiceEntity" name="service" foreign-key="fk_service_sampling">
            <column name="fk_service_id" unique-key="un_sampling_identity">
                <comment>Reference to the service this sampling belongs to.</comment>
            </column>
        </many-to-one>
        <property name="identifier" type="string" index="idx_sampling_identifier">
            <column name="identifier" not-null="false" unique-key="un_sampling_identity">
                <comment>The identifier of the sampling. Should be a URI, UUID. E.g. http://www.example.org/123, 123-321</comment>
            </column>
        </property>

        <property name="name" type="string">
            <column name="name">
                <comment>The human readable name or the label of the sampling.</comment>
            </column>
        </property>

        <property name="description" type="text">
            <column name="description">
                <comment>A short description or the COMMENT of the sampling</comment>
            </column>
        </property>

         <property name="sampler" type="string">
            <column name="sampler">
                <comment>The sampler (e.g. name of a person or an organization) who take the sample.</comment>
            </column>
        </property>

         <property name="samplingMethod" type="string">
            <column name="sampling_method">
                <comment>The sampling method used to take the sample</comment>
            </column>
        </property>

         <property name="environmentalConditions" type="string">
            <column name="environmental_conditions">
                <comment>The environmental conditions when the sample was made, e.g. sunny, dry, hot</comment>
            </column>
        </property>

        <property name="samplingTimeStart" type="timestamp">
            <column index="idx_samplg_sampling_time_start" name="sampling_time_start" length="29" not-null="true">
                <comment>The timestamp when the sampling period has started.</comment>
            </column>
        </property>

        <property name="samplingTimeEnd" type="timestamp">
            <column index="idx_samplg_sampling_time_end" name="sampling_time_end" length="29" not-null="true">
                <comment>The timestamp when the sampling period has finished.</comment>
            </column>
        </property>

        <set inverse="false" name="datasets" table="sampling_dataset" >
            <comment>Storage of relations between datasets and related samplings</comment>
            <key not-null="true" foreign-key="fk_sampling_dataset">
                <column name="fk_sampling_id">
                    <comment>The reference to the sampling in the sampling table.</comment>
                </column>
            </key>
            <many-to-many class="org.n52.series.db.beans.DatasetEntity" foreign-key="fk_dataset_sampling">
                <column name="fk_dataset_id" index="idx_sampling_dataset">
                    <comment>The reference to the dataset in the dataset table that provides observations related to the sampling.</comment>
                </column>
            </many-to-many>
        </set>

        <set name="observations" table="observation" inverse="true">
            <key column="fk_sampling_id" />
            <one-to-many class="org.n52.series.db.beans.DataEntity" />
        </set>

         <set name="translations" table="sampling_i18n" inverse="true" fetch="select">
            <key column="fk_sampling_id" not-null="true" />
            <one-to-many class="org.n52.series.db.beans.i18n.I18nSamplingEntity" />
        </set>
    </class>

    <class name="org.n52.series.db.beans.i18n.I18nSamplingEntity" table="sampling_i18n">
        <id name="id" type="long">
            <column name="sampling_i18n_id">
                <comment>PK column of the table</comment>
            </column>
            <generator class="native">
                <param name="sequence_name">sampling_i18n_seq</param>
            </generator>
        </id>
        <many-to-one name="entity" class="SamplingEntity" foreign-key="fk_sampling_i18n">
            <column name="fk_sampling_id" not-null="true" index="idx_sampling_i18n_sampling">
                <comment>Reference to the sampling table this internationalization belongs to.</comment>
            </column>
        </many-to-one>
         <property name="locale" not-null="true" type="string">
            <column name="locale">
                <comment>Locale/language specification for this entry. ISO 639 Codes (http://www.loc.gov/standards/iso639-2/php/code_list.php)</comment>
            </column>
        </property>
        <property name="name" type="string">
            <column name="name">
                <comment>Locale/language specific name of the sampling entity</comment>
            </column>
        </property>
        <property name="description" type="text">
            <column name="description">
                <comment>Locale/language specific description of the sampling entity</comment>
            </column>
        </property>
        <property name="samplingMethod" type="string">
            <column name="sampling_method">
                <comment>Locale/language specific sampling method of the sampling entity</comment>
            </column>
        </property>
        <property name="environmentalConditions" type="string">
            <column name="environmental_conditions">
                <comment>Locale/language specific environmental conditions of the sampling entity</comment>
            </column>
        </property>
    </class>
    <database-object>
        <create>CREATE or REPLACE FUNCTION insert_dataset_sampling_flag() RETURNS TRIGGER AS $$ BEGIN UPDATE ${schema}.dataset SET is_samplings = 1 WHERE dataset_id = NEW.fk_dataset_id; RETURN NEW; END  $$ LANGUAGE plpgsql</create>
        <drop>DROP FUNCTION IF EXISTS insert_dataset_sampling_flag()</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQL95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.postgis.TimestampWithTimeZonePostgisPG95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.TimestampWithTimeZonePostgisPG95DialectNoComments"></dialect-scope>
    </database-object>
    <database-object>
        <create>CREATE or REPLACE FUNCTION delete_dataset_sampling_flag() RETURNS TRIGGER AS $$ DECLARE dataset_count SMALLINT; BEGIN SELECT count(fk_dataset_id) INTO dataset_count FROM ${schema}.sampling_dataset WHERE fk_dataset_id = OLD.fk_dataset_id; IF dataset_count = 0 THEN UPDATE ${schema}.dataset SET is_samplings = 0 WHERE dataset_id = OLD.fk_dataset_id; END IF; RETURN OLD; END $$ LANGUAGE plpgsql</create>
        <drop>DROP FUNCTION IF EXISTS delete_dataset_sampling_flag()</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQL95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.postgis.TimestampWithTimeZonePostgisPG95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.TimestampWithTimeZonePostgisPG95DialectNoComments"></dialect-scope>
    </database-object>
    <database-object>
        <create>CREATE TRIGGER insert_dataset_sampling_flag AFTER INSERT ON ${schema}.sampling_dataset FOR EACH ROW EXECUTE PROCEDURE insert_dataset_sampling_flag()</create>
        <drop>DROP TRIGGER IF EXISTS insert_dataset_sampling_flag ON ${schema}.sampling_dataset</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQL95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.postgis.TimestampWithTimeZonePostgisPG95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.TimestampWithTimeZonePostgisPG95DialectNoComments"></dialect-scope>
    </database-object>
    <database-object>
        <create>CREATE TRIGGER delete_dataset_sampling_flag AFTER DELETE ON ${schema}.sampling_dataset FOR EACH ROW EXECUTE PROCEDURE delete_dataset_sampling_flag()</create>
        <drop>DROP TRIGGER IF EXISTS delete_dataset_sampling_flag ON ${schema}.sampling_dataset</drop>
        <dialect-scope name="org.hibernate.dialect.PostgreSQL95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.postgis.TimestampWithTimeZonePostgisPG95Dialect"></dialect-scope>
        <dialect-scope name="org.n52.hibernate.spatial.dialect.TimestampWithTimeZonePostgisPG95DialectNoComments"></dialect-scope>
    </database-object>
</hibernate-mapping>
